.card.shadow-sm.mb-4
  .card-body.p-0
    #map style="height: 600px; width: 100%; border-radius: 4px;"

/ Leaflet CSS and JS
link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"

/ Include Faye client script
script src="http://localhost:3000/faye/faye.js"

script
  |
    document.addEventListener('DOMContentLoaded', () => {
      const map = L.map('map').setView([24.79, 120.98], 13);
      const userMarkers = {};
      const channel = "#{{ flock_id }}";
      const current_bird = #{{ bird.to_json }};

      const client = new Faye.Client("http://localhost:3000/faye");

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; OpenStreetMap contributors'
      }).addTo(map);

      function updateMarker(id, name, msg, lat, lng) {
        const popup = `<b>${name}</b><br>${msg}<br>`;
        if (!userMarkers[id]) {
          userMarkers[id] = L.marker([lat, lng]).addTo(map).bindPopup(popup);
        } else {
          userMarkers[id].setLatLng([lat, lng]);
          userMarkers[id].bindPopup(popup);
        }
      }

      client.subscribe(`/${channel}`, (birds) => {
        console.log(birds)
        birds.forEach(entry => {
          const user = entry.data.attributes;
          const account = entry.included.account.attributes;
          updateMarker(user.id, account.username, user.message, user.latitude, user.longitude);
        });
      });

      navigator.geolocation.watchPosition((position) => {
        fetch('/map', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ flock_id: channel, 
                                 bird_id: current_bird.bird_id, 
                                 latitude: position.coords.latitude, 
                                 longitude: position.coords.longitude, 
                                 message: 'here' })
        });
      });
    });              const lat = pos.coords.latitude;
              const lng = pos.coords.longitude;

              // Send to backend
              try {
                const response = await fetch('/map', {
                  method: 'POST', // or 'PATCH' depending on your backend
                  headers: {
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify({ flock_id: current_bird.flock_id, bird_id: current_bird.bird_id, latitude: lat, longitude: lng, message: 'here' })
                });

                if (!response.ok) throw new Error('Failed to update location');
              } catch (err) {
                console.error(err);
                alert('Could not update your location');
              }
            });
          }

        });
